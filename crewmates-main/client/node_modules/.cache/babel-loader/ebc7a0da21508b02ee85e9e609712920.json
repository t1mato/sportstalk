{"ast":null,"code":"var _jsxFileName = \"/Users/timato/Documents/WEB102/Unit 7/crewmates/crewmates-main/client/src/pages/InfoPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client'; // Ensure you import supabase from your client file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState({\n    id: null,\n    name: \"\",\n    speed: \"\",\n    color: \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Crewmates').select().eq('id', id).single(); // Assuming you expect only one row to match the ID\n\n        if (error) {\n          throw error;\n        }\n\n        if (data) {\n          setPost(data);\n        } else {\n          // Handle case when no data is found for the provided ID\n          console.error(`No data found for ID ${id}`);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Crewmate: \", post.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Speed: \", post.speed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfoPost, \"ln4Y2chlXcnHqpJHiEuN1gttSX8=\", false, function () {\n  return [useParams];\n});\n\n_c = InfoPost;\nexport default InfoPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","InfoPost","id","post","setPost","name","speed","color","fetchData","data","error","from","select","eq","single","console","message"],"sources":["/Users/timato/Documents/WEB102/Unit 7/crewmates/crewmates-main/client/src/pages/InfoPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client'; // Ensure you import supabase from your client file\n\nconst InfoPost = () => {\n    const { id } = useParams();\n    const [post, setPost] = useState({ id: null, name: \"\", speed: \"\", color: \"\" });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const { data, error } = await supabase\n                    .from('Crewmates')\n                    .select()\n                    .eq('id', id)\n                    .single(); // Assuming you expect only one row to match the ID\n\n                if (error) {\n                    throw error;\n                }\n\n                if (data) {\n                    setPost(data);\n                } else {\n                    // Handle case when no data is found for the provided ID\n                    console.error(`No data found for ID ${id}`);\n                }\n            } catch (error) {\n                console.error('Error fetching data:', error.message);\n            }\n        };\n\n        fetchData();\n    }, [id]);\n\n    return (\n        <div>\n            <p>Crewmate: {post.name}</p>\n            <p>Speed: {post.speed}</p>\n            {/* Add additional fields as needed */}\n        </div>\n    );\n};\n\nexport default InfoPost;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,WAAzB,C,CAAsC;;;;AAEtC,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAASH,SAAS,EAAxB;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;IAAEK,EAAE,EAAE,IAAN;IAAYG,IAAI,EAAE,EAAlB;IAAsBC,KAAK,EAAE,EAA7B;IAAiCC,KAAK,EAAE;EAAxC,CAAD,CAAhC;EAEAT,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,YAAY;MAC1B,IAAI;QACA,MAAM;UAAEC,IAAF;UAAQC;QAAR,IAAkB,MAAMV,QAAQ,CACjCW,IADyB,CACpB,WADoB,EAEzBC,MAFyB,GAGzBC,EAHyB,CAGtB,IAHsB,EAGhBX,EAHgB,EAIzBY,MAJyB,EAA9B,CADA,CAKe;;QAEf,IAAIJ,KAAJ,EAAW;UACP,MAAMA,KAAN;QACH;;QAED,IAAID,IAAJ,EAAU;UACNL,OAAO,CAACK,IAAD,CAAP;QACH,CAFD,MAEO;UACH;UACAM,OAAO,CAACL,KAAR,CAAe,wBAAuBR,EAAG,EAAzC;QACH;MACJ,CAjBD,CAiBE,OAAOQ,KAAP,EAAc;QACZK,OAAO,CAACL,KAAR,CAAc,sBAAd,EAAsCA,KAAK,CAACM,OAA5C;MACH;IACJ,CArBD;;IAuBAR,SAAS;EACZ,CAzBQ,EAyBN,CAACN,EAAD,CAzBM,CAAT;EA2BA,oBACI;IAAA,wBACI;MAAA,yBAAcC,IAAI,CAACE,IAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,sBAAWF,IAAI,CAACG,KAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAtCD;;GAAML,Q;UACaF,S;;;KADbE,Q;AAwCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}