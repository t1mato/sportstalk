{"ast":null,"code":"var _jsxFileName = \"/Users/timato/Documents/WEB102/Final/forum/forum-main/client/src/pages/InfoPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../pages/InfoPost.css';\nimport { supabase } from '../client';\nimport { Link } from 'react-router-dom';\nimport thumbsup from './like.png';\nimport deletepost from './delete.png';\nimport editpost from './more.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState({\n    id: null,\n    title: \"\",\n    content: \"\",\n    link: \"\",\n    upvotes: 0\n  });\n  const [timeAgo, setTimeAgo] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data\n        } = await supabase.from('SportsTalk').select().eq('id', id).single();\n        setPost(data);\n        const createdAt = new Date(data.created_at);\n        const currentTime = new Date();\n        const hoursDifference = Math.abs(currentTime - createdAt) / 36e5;\n        setTimeAgo(calculateTimeAgo(hoursDifference)); // Fetch comments associated with the post\n\n        const {\n          data: commentsData,\n          error\n        } = await supabase.from('Comments').select('comment_text').eq('post_id', id);\n\n        if (error) {\n          throw error;\n        }\n\n        setComments(commentsData || []);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  const calculateTimeAgo = hours => {// Function to calculate time ago\n  };\n\n  const updateCount = async () => {// Function to update post upvotes\n  };\n\n  const deletePost = async () => {// Function to delete post\n  };\n\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // Insert new comment into the database\n      const {\n        data,\n        error\n      } = await supabase.from('Comments').insert([{\n        post_id: id,\n        comment_text: newComment\n      }]);\n\n      if (error) {\n        throw error;\n      } // Add the new comment to the local state\n\n\n      setComments([...comments, data[0]]);\n      setNewComment(\"\"); // Clear the input field\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Posted \", timeAgo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [post.content, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.link,\n        alt: \"post image\",\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-list\",\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.comment_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfoPost, \"EvM7MrDmT8R/ht58b+JNorbnehw=\", false, function () {\n  return [useParams];\n});\n\n_c = InfoPost;\nexport default InfoPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","Link","thumbsup","deletepost","editpost","InfoPost","id","post","setPost","title","content","link","upvotes","timeAgo","setTimeAgo","comments","setComments","newComment","setNewComment","fetchData","data","from","select","eq","single","createdAt","Date","created_at","currentTime","hoursDifference","Math","abs","calculateTimeAgo","commentsData","error","console","message","hours","updateCount","deletePost","handleCommentSubmit","e","preventDefault","insert","post_id","comment_text","target","value","map","comment","index"],"sources":["/Users/timato/Documents/WEB102/Final/forum/forum-main/client/src/pages/InfoPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../pages/InfoPost.css'\nimport { supabase } from '../client'\nimport { Link } from 'react-router-dom'\nimport thumbsup from './like.png'\nimport deletepost from './delete.png'\nimport editpost from './more.png'\n\nconst InfoPost = () => {\n    const { id } = useParams()\n    const [post, setPost] = useState({ id: null, title: \"\", content: \"\", link: \"\", upvotes: 0 });\n    const [timeAgo, setTimeAgo] = useState(\"\");\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const { data } = await supabase\n                    .from('SportsTalk')\n                    .select()\n                    .eq('id', id)\n                    .single();\n\n                setPost(data);\n\n                const createdAt = new Date(data.created_at);\n                const currentTime = new Date();\n                const hoursDifference = Math.abs(currentTime - createdAt) / 36e5;\n\n                setTimeAgo(calculateTimeAgo(hoursDifference));\n\n                // Fetch comments associated with the post\n                const { data: commentsData, error } = await supabase\n                    .from('Comments')\n                    .select('comment_text')\n                    .eq('post_id', id);\n\n                if (error) {\n                    throw error;\n                }\n\n                setComments(commentsData || []);\n            } catch (error) {\n                console.error('Error fetching data:', error.message);\n            }\n        };\n\n        fetchData();\n    }, [id]);\n\n    const calculateTimeAgo = (hours) => {\n      // Function to calculate time ago\n    }\n\n    const updateCount = async () => {\n        // Function to update post upvotes\n    };\n\n    const deletePost = async () => {\n        // Function to delete post\n    };\n\n    const handleCommentSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            // Insert new comment into the database\n            const { data, error } = await supabase\n                .from('Comments')\n                .insert([{ post_id: id, comment_text: newComment }]);\n\n            if (error) {\n                throw error;\n            }\n\n            // Add the new comment to the local state\n            setComments([...comments, data[0]]);\n            setNewComment(\"\"); // Clear the input field\n        } catch (error) {\n            console.error('Error adding comment:', error.message);\n        }\n    };\n\n    return (\n        <div className=\"Card\">\n            <div className=\"post-info\">\n              <p>Posted {timeAgo}</p>\n              <h5>{post.title}</h5>\n              <p>{post.content} </p>\n              <img src={post.link} alt=\"post image\" className=\"post-image\" /> <br />\n            </div>\n            <div className=\"button-container\">\n                {/* Upvote and Delete buttons */}\n            </div>\n            <div className=\"comments-section\">\n                <form onSubmit={handleCommentSubmit}>\n                    <input\n                        type=\"text\"\n                        value={newComment}\n                        onChange={(e) => setNewComment(e.target.value)}\n                        placeholder=\"Add a comment...\"\n                    />\n                    <button type=\"submit\">Post Comment</button>\n                </form>\n                <div className=\"comments-list\">\n                    {comments.map((comment, index) => (\n                        <div key={index} className=\"comment\">\n                            <p>{comment.comment_text}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InfoPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}