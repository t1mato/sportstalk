{"ast":null,"code":"var _jsxFileName = \"/Users/timato/Documents/WEB102/Final/forum/forum-main/client/src/pages/InfoPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../pages/InfoPost.css';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoPost = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState({\n    id: null,\n    title: \"\",\n    content: \"\",\n    link: \"\"\n  });\n  const [hoursAgo, setHoursAgo] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await supabase.from('SportsTalk').select().eq('id', id).single(); // Assuming you expect only one row to match the ID\n\n      setPost(data);\n    };\n\n    fetchData();\n  }, []);\n  const createdAt = new Date(post.created_at);\n  const currenTime = new Date();\n  const hoursDifference = Math.abs(currenTime - createdAt) / 36e5;\n  setHoursAgo(Math.round);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crewmate-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.created_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Crewmate: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Speed: \", post.content, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_s(InfoPost, \"yKNxKhTGOVw40md+R75q9iu+bO8=\", false, function () {\n  return [useParams];\n});\n\n_c = InfoPost;\nexport default InfoPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","InfoPost","data","id","post","setPost","title","content","link","hoursAgo","setHoursAgo","fetchData","from","select","eq","single","createdAt","Date","created_at","currenTime","hoursDifference","Math","abs","round","upvotes"],"sources":["/Users/timato/Documents/WEB102/Final/forum/forum-main/client/src/pages/InfoPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../pages/InfoPost.css'\nimport { supabase } from '../client'\n\nconst InfoPost = ({ data }) => {\n    const {id} = useParams()\n    const [post, setPost] = useState({id: null, title: \"\", content: \"\", link: \"\"});\n    const [hoursAgo, setHoursAgo] = useState(null)\n  \n    useEffect(() => {\n      const fetchData = async () => {\n          const { data } = await supabase\n            .from('SportsTalk')\n            .select()\n            .eq('id', id)\n            .single(); // Assuming you expect only one row to match the ID\n  \n  \n          setPost(data);\n      };\n  \n      fetchData();\n    }, []);\n  \n    const createdAt = new Date(post.created_at)\n    const currenTime = new Date()\n    const hoursDifference = Math.abs(currenTime - createdAt) / 36e5\n    setHoursAgo(Math.round)\n\n    return (\n      <div className=\"crewmate-container\">\n        <p>{post.created_at}</p>\n        <h1>Crewmate: {post.title}</h1>\n        <p>Speed: {post.content} </p>\n        <p>Upvotes: {post.upvotes}</p>\n      </div>\n    );\n  };\n  \n  export default InfoPost;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,uBAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,QAAQ,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC3B,MAAM;IAACC;EAAD,IAAOJ,SAAS,EAAtB;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;IAACM,EAAE,EAAE,IAAL;IAAWG,KAAK,EAAE,EAAlB;IAAsBC,OAAO,EAAE,EAA/B;IAAmCC,IAAI,EAAE;EAAzC,CAAD,CAAhC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,YAAY;MAC1B,MAAM;QAAET;MAAF,IAAW,MAAMF,QAAQ,CAC5BY,IADoB,CACf,YADe,EAEpBC,MAFoB,GAGpBC,EAHoB,CAGjB,IAHiB,EAGXX,EAHW,EAIpBY,MAJoB,EAAvB,CAD0B,CAKb;;MAGbV,OAAO,CAACH,IAAD,CAAP;IACH,CATD;;IAWAS,SAAS;EACV,CAbQ,EAaN,EAbM,CAAT;EAeA,MAAMK,SAAS,GAAG,IAAIC,IAAJ,CAASb,IAAI,CAACc,UAAd,CAAlB;EACA,MAAMC,UAAU,GAAG,IAAIF,IAAJ,EAAnB;EACA,MAAMG,eAAe,GAAGC,IAAI,CAACC,GAAL,CAASH,UAAU,GAAGH,SAAtB,IAAmC,IAA3D;EACAN,WAAW,CAACW,IAAI,CAACE,KAAN,CAAX;EAEA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAA,UAAInB,IAAI,CAACc;IAAT;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,yBAAed,IAAI,CAACE,KAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,sBAAWF,IAAI,CAACG,OAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,wBAAaH,IAAI,CAACoB,OAAlB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAjCH;;GAAMvB,Q;UACWF,S;;;KADXE,Q;AAmCJ,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}