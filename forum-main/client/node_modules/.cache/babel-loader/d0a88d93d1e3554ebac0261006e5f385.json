{"ast":null,"code":"var _jsxFileName = \"/Users/timato/Documents/WEB102/Unit 7/crewmates/crewmates-main/client/src/pages/InfoPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './EditPost.css';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoPost = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('Crewmates').select().eq('id', id).single(); // Assuming you expect only one row to match the ID\n\n        if (error) {\n          throw error;\n        }\n\n        setData(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Crewmate: \", data.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Speed: \", data.speed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s(InfoPost, \"V3b444vw5CJJPP7tHAiaxMsuEuk=\", false, function () {\n  return [useParams];\n});\n\n_c = InfoPost;\nexport default InfoPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","InfoPost","data","id","post","setPost","error","setError","fetchData","from","select","eq","single","setData","message","name","speed"],"sources":["/Users/timato/Documents/WEB102/Unit 7/crewmates/crewmates-main/client/src/pages/InfoPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './EditPost.css'\nimport { supabase } from '../client'\n\nconst InfoPost = ({ data }) => {\n    const {id} = useParams()\n    const [post, setPost] = useState(null);\n    const [error, setError] = useState(null);\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const { data, error } = await supabase\n            .from('Crewmates')\n            .select()\n            .eq('id', id)\n            .single(); // Assuming you expect only one row to match the ID\n  \n          if (error) {\n            throw error;\n          }\n  \n          setData(data);\n        } catch (error) {\n          setError(error.message);\n        }\n      };\n  \n      fetchData();\n    }, [id]);\n  \n    if (error) {\n      return <div>Error: {error}</div>;\n    }\n  \n    if (!data) {\n      return <div>Loading...</div>;\n    }\n  \n    return (\n      <div>\n        <p>Crewmate: {data.name}</p>\n        <p>Speed: {data.speed}</p>\n        {/* Add additional fields as needed */}\n      </div>\n    );\n  };\n  \n  export default InfoPost;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,QAAQ,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC3B,MAAM;IAACC;EAAD,IAAOJ,SAAS,EAAtB;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAM;UAAEN,IAAF;UAAQI;QAAR,IAAkB,MAAMN,QAAQ,CACnCS,IAD2B,CACtB,WADsB,EAE3BC,MAF2B,GAG3BC,EAH2B,CAGxB,IAHwB,EAGlBR,EAHkB,EAI3BS,MAJ2B,EAA9B,CADE,CAKW;;QAEb,IAAIN,KAAJ,EAAW;UACT,MAAMA,KAAN;QACD;;QAEDO,OAAO,CAACX,IAAD,CAAP;MACD,CAZD,CAYE,OAAOI,KAAP,EAAc;QACdC,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;MACD;IACF,CAhBD;;IAkBAN,SAAS;EACV,CApBQ,EAoBN,CAACL,EAAD,CApBM,CAAT;;EAsBA,IAAIG,KAAJ,EAAW;IACT,oBAAO;MAAA,sBAAaA,KAAb;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAI,CAACJ,IAAL,EAAW;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAA,wBACE;MAAA,yBAAcA,IAAI,CAACa,IAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,sBAAWb,IAAI,CAACc,KAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA1CH;;GAAMf,Q;UACWF,S;;;KADXE,Q;AA4CJ,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}