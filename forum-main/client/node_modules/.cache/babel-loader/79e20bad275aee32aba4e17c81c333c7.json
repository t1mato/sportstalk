{"ast":null,"code":"var _jsxFileName = \"/Users/timato/Documents/WEB102/Final/forum/forum-main/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport SearchBar from '../components/SearchBar';\nimport { supabase } from '../client';\nimport '../pages/ReadPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const {\n          data\n        } = await supabase.from('SportsTalk').select().order('created_at', {\n          ascending: true\n        });\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setSearchResults(posts); // If search term is empty, display all posts\n    }\n  }, [searchTerm, posts]);\n\n  const searchPosts = async title => {\n    try {\n      setSearchTerm(title); // Update search term\n\n      if (title.trim() === '') {\n        setSearchResults(posts); // If search term is empty, display all posts\n      } else {\n        const {\n          data,\n          error\n        } = await supabase.from('SportsTalk').select().ilike('title', `%${title}%`);\n\n        if (error) {\n          throw error;\n        }\n\n        setSearchResults(data || []);\n      }\n    } catch (error) {\n      console.error('Error searching posts:', error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: searchPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), searchResults.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      id: post.id,\n      title: post.title\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"XpF9Isz3O295gwfKEMQB/FoUEkE=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Card","SearchBar","supabase","ReadPosts","posts","setPosts","searchResults","setSearchResults","searchTerm","setSearchTerm","fetchPosts","data","from","select","order","ascending","error","console","message","trim","searchPosts","title","ilike","map","post","id"],"sources":["/Users/timato/Documents/WEB102/Final/forum/forum-main/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport SearchBar from '../components/SearchBar';\nimport { supabase } from '../client';\nimport '../pages/ReadPosts.css';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const { data } = await supabase\n                    .from('SportsTalk')\n                    .select()\n                    .order('created_at', { ascending: true });\n\n                setPosts(data);\n            } catch (error) {\n                console.error('Error fetching data:', error.message);\n            }\n        };\n\n        fetchPosts();\n    }, []);\n\n    useEffect(() => {\n        if (searchTerm.trim() === '') {\n            setSearchResults(posts); // If search term is empty, display all posts\n        }\n    }, [searchTerm, posts]);\n\n    const searchPosts = async (title) => {\n        try {\n            setSearchTerm(title); // Update search term\n            if (title.trim() === '') {\n                setSearchResults(posts); // If search term is empty, display all posts\n            } else {\n                const { data, error } = await supabase\n                    .from('SportsTalk')\n                    .select()\n                    .ilike('title', `%${title}%`);\n    \n                if (error) {\n                    throw error;\n                }\n    \n                setSearchResults(data || []);\n            }\n        } catch (error) {\n            console.error('Error searching posts:', error.message);\n        }\n    };\n\n    return (\n        <div className=\"ReadPosts\">\n            <SearchBar onSearch={searchPosts} />\n            {searchResults.map((post) => (\n                <Card key={post.id} id={post.id} title={post.title} />\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAG,YAAY;MAC3B,IAAI;QACA,MAAM;UAAEC;QAAF,IAAW,MAAMT,QAAQ,CAC1BU,IADkB,CACb,YADa,EAElBC,MAFkB,GAGlBC,KAHkB,CAGZ,YAHY,EAGE;UAAEC,SAAS,EAAE;QAAb,CAHF,CAAvB;QAKAV,QAAQ,CAACM,IAAD,CAAR;MACH,CAPD,CAOE,OAAOK,KAAP,EAAc;QACZC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAK,CAACE,OAA5C;MACH;IACJ,CAXD;;IAaAR,UAAU;EACb,CAfQ,EAeN,EAfM,CAAT;EAiBAX,SAAS,CAAC,MAAM;IACZ,IAAIS,UAAU,CAACW,IAAX,OAAsB,EAA1B,EAA8B;MAC1BZ,gBAAgB,CAACH,KAAD,CAAhB,CAD0B,CACD;IAC5B;EACJ,CAJQ,EAIN,CAACI,UAAD,EAAaJ,KAAb,CAJM,CAAT;;EAMA,MAAMgB,WAAW,GAAG,MAAOC,KAAP,IAAiB;IACjC,IAAI;MACAZ,aAAa,CAACY,KAAD,CAAb,CADA,CACsB;;MACtB,IAAIA,KAAK,CAACF,IAAN,OAAiB,EAArB,EAAyB;QACrBZ,gBAAgB,CAACH,KAAD,CAAhB,CADqB,CACI;MAC5B,CAFD,MAEO;QACH,MAAM;UAAEO,IAAF;UAAQK;QAAR,IAAkB,MAAMd,QAAQ,CACjCU,IADyB,CACpB,YADoB,EAEzBC,MAFyB,GAGzBS,KAHyB,CAGnB,OAHmB,EAGT,IAAGD,KAAM,GAHA,CAA9B;;QAKA,IAAIL,KAAJ,EAAW;UACP,MAAMA,KAAN;QACH;;QAEDT,gBAAgB,CAACI,IAAI,IAAI,EAAT,CAAhB;MACH;IACJ,CAhBD,CAgBE,OAAOK,KAAP,EAAc;MACZC,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAK,CAACE,OAA9C;IACH;EACJ,CApBD;;EAsBA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI,QAAC,SAAD;MAAW,QAAQ,EAAEE;IAArB;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKd,aAAa,CAACiB,GAAd,CAAmBC,IAAD,iBACf,QAAC,IAAD;MAAoB,EAAE,EAAEA,IAAI,CAACC,EAA7B;MAAiC,KAAK,EAAED,IAAI,CAACH;IAA7C,GAAWG,IAAI,CAACC,EAAhB;MAAA;MAAA;MAAA;IAAA,QADH,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CA1DD;;GAAMtB,S;;KAAAA,S;AA4DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}